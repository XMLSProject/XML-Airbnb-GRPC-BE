syntax = "proto3";

option go_package = "proto/reservation";

service ReservationService {
  rpc GreetFromReservation(Request) returns (Response) {}
  rpc Reserve(RequestForReserve) returns (ResponseForReserve) {}
  rpc DeleteReservation(RequestDeleteReservation) returns (ResponseDeleteReservation) {}
  rpc AcceptReservation(DeleteRequest) returns (DeleteResponse) {}
  rpc CheckReservations(Request) returns (Response) {}
  rpc CheckReservationsByDates(CheckRequest) returns (CheckResponse) {}
  rpc GetAllReservations(AllReservationsRequest) returns (AllReservationsResponse){}
  rpc CheckForGuests(Request) returns (Response) {}

}
message DeleteRequest {
  string dlt = 3;
}

message DeleteResponse {
  string dlt = 4;
}
message RequestDeleteReservation {
  string delres = 3;
}
message ResponseDeleteReservation {
  string delres = 4;
}
message RequestAccept {
  string acce = 3;
}

message ResponseAccept {
  string acce = 4;
}

message Request {
  string name = 1;
}

message Response {
  string greeting = 2;
}
message RequestForReserve {
  ReserveInfo reserve = 3;
}
message ResponseForReserve {
  string reserve = 4;
}
message ReserveInfo {
        string fromDate = 2;
        string toDate = 3;
        int32 guestNumber = 4;
        string accommodation = 5;
        string accepted = 6;
        string acception = 7;
}

message AllReservationsRequest {
  string nothing = 1;
}

message AllReservationsResponse {
  repeated AllReservationInfo allAcco = 1;
}
message AllReservationInfo {
  string id = 1;
  string fromDate = 2;
  string toDate = 3;
  int32 guestNumber = 4;
  string accommodation = 5;
  string accepted = 6;
  string acception = 7;
}

message CheckRequest {
  CheckReqInfo checkInfo = 1;
}

message CheckResponse {
  bool checkRes = 1;
}

message CheckReqInfo {
  string accoId = 1;
  string dateFrom = 2;
  string dateTo = 3;
}